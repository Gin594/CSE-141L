// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "03/08/2020 16:59:38"
                                                                                
// Verilog Test Bench template for design : TopLevel
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ns/ 1 ns
module Core_tb();
// test vector input registers
reg CLK;
reg start;
// wires                                               
wire program_done;

// assign statements (if any)                          
TopLevel DUT (
// port map - connection between master ports and signals/registers   
	.CLK(clk),
	.program_done(program_done),
	.start(rst)
);
initial                                                
begin                                                  
// code that executes only once                        
// insert code here --> begin                          
   repeat(990)
   begin
	   clk  = 1'b1  ;
	   #5  clk  = 1'b0  ;
	  #5 ;
   end                                                                          
end   
      
initial
begin
	rst = 1'b0;
	# 100;
	$display("Running testbench");
	rst = 1'b1;
	# 9800 ;
end                                           

initial
#20000 $stop;                                                   
endmodule

